{
	"name": "PL - PostgresArchive - Events",
	"properties": {
		"activities": [
			{
				"name": "Get Events MaxId",
				"description": "Get the max event_id that exists in both events and actions that where the record is more than 10 minutes old.",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select max(id) as MaxId from events",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_UsEmRptArchive",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Copy events to staging table",
				"description": "Copy Postgres events to Archive staging_events",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Get Events MaxId",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get PG MaxId",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 2,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "PostgreSqlSource",
						"query": {
							"value": "SELECT \tid, \n\t\temail, \n\t\tevent_action, \n\t\tevent_time::timestamp, \n\t\tsite_id, \n\t\tsub_community_id, \n\t\temail_id, \n\t\temail_recurrence_id,\n\t\tmember_id, \n\t\temail_category, \n\t\tdrop_type, \n\t\tdrop_status, \n\t\tdrop_reason, \n\t\turl, \n\t\tuser_agent, \n\t\tip, \n\t\tcompleted_tracking_item_name, \n\t\tsg_event_id\nFROM public.events\nWHERE id > @{activity('Get Events MaxId').output.FirstRow.MaxId} \nand id <= @{activity('Get PG MaxId').output.firstrow.PgMaxId}\nORDER BY id\n",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "SqlServerSink",
						"preCopyScript": "truncate table [dbo].[stage_events]"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "id",
									"type": "Int64"
								},
								"sink": {
									"name": "id",
									"type": "Int64",
									"physicalType": "bigint"
								}
							},
							{
								"source": {
									"name": "email",
									"type": "String"
								},
								"sink": {
									"name": "email",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "event_action",
									"type": "String"
								},
								"sink": {
									"name": "event_action",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "event_time",
									"type": "DateTime"
								},
								"sink": {
									"name": "event_time",
									"type": "DateTime",
									"physicalType": "datetime2"
								}
							},
							{
								"source": {
									"name": "site_id",
									"type": "Int32"
								},
								"sink": {
									"name": "site_id",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "sub_community_id",
									"type": "Int32"
								},
								"sink": {
									"name": "sub_community_id",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "email_id",
									"type": "Int32"
								},
								"sink": {
									"name": "email_id",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "email_recurrence_id",
									"type": "Int32"
								},
								"sink": {
									"name": "email_recurrence_id",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "member_id",
									"type": "Int32"
								},
								"sink": {
									"name": "member_id",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "email_category",
									"type": "String"
								},
								"sink": {
									"name": "email_category",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "drop_type",
									"type": "String"
								},
								"sink": {
									"name": "drop_type",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "drop_status",
									"type": "String"
								},
								"sink": {
									"name": "drop_status",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "drop_reason",
									"type": "String"
								},
								"sink": {
									"name": "drop_reason",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "url",
									"type": "String"
								},
								"sink": {
									"name": "url",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "user_agent",
									"type": "String"
								},
								"sink": {
									"name": "user_agent",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "ip",
									"type": "String"
								},
								"sink": {
									"name": "ip",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "completed_tracking_item_name",
									"type": "String"
								},
								"sink": {
									"name": "completed_tracking_item_name",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "sg_event_id",
									"type": "String"
								},
								"sink": {
									"name": "sg_event_id",
									"type": "String",
									"physicalType": "nvarchar"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_EmailReporting",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DS_UsEmRptArchive_events",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "usp_merge_events",
				"description": "Merge staging_events with Staging. This procedure performs merge in batches of 100,000.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy events to staging table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_merge_events]"
				},
				"linkedServiceName": {
					"referenceName": "LS_EmRptArhive",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Truncate stage_events",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "usp_merge_events",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_trunacate_stage_events]"
				},
				"linkedServiceName": {
					"referenceName": "LS_EmRptArhive",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Get PG MaxId",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "PostgreSqlSource",
						"query": {
							"value": "select id as PgMaxId\nfrom events\nwhere event_time <  now() - Interval '10 Minutes'\norder by id desc\nlimit 1",
							"type": "Expression"
						}
					},
					"dataset": {
						"referenceName": "DS_EmailReporting",
						"type": "DatasetReference"
					}
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2021-10-11T19:16:29Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}