{
	"name": "CopyEventToFactEmailAction",
	"properties": {
		"description": "Copy Event table from staging to FactEmail table in prod by SiteId by month.",
		"activities": [
			{
				"name": "GetMonthList",
				"description": "Get list of months from 01/2017 through the next calendar month.",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "GetMaxEventId",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlMISource",
						"sqlReaderQuery": {
							"value": "SELECT\tDISTINCT dd.Year,\n\t\tdd.Month,\n\t\tdd.MMYYYY\nFROM\tdbo.DimDate dd\nWHERE\tdd.DateKey >= (SELECT ISNULL(MIN(DateKey),20171001) FROM dbo.event WHERE $partition.pf_event(SiteId) = $partition.pf_event(@{pipeline().parameters.SiteId}) AND EventId = @{activity('GetMaxEventId').output.FirstRow.MaxEventId})\n\t\tAND dd.DateKey < CAST(CONVERT(VARCHAR,DATEADD(d, 1, EOMONTH(current_timestamp)),112) AS INT)\nORDER\tBY dd.Year,\n\t\tdd.Month",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_iModulesStaging",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "GetMaxEventId",
				"description": "Get max EventId from StageEmailMaxId for SiteId",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlMISource",
						"sqlReaderQuery": {
							"value": "SELECT\tISNULL(MAX(EventId),0) AS MaxEventId\nFROM\tStageEmailMaxId\nWHERE\tSiteId = @{pipeline().parameters.SiteId}",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_iModDW",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "LoopThroughMonths",
				"description": "Loop through month list and copy Event data to FactEmail",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GetMonthList",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetMonthList').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "CopyEventToFactEmail",
							"description": "Copy any new rows by SiteId by month where EventId exceeds MaxEventId",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlMISource",
									"sqlReaderQuery": {
										"value": "SELECT  e.SiteId,\n\t\te.SubCommunityId,\n        e.DateKey,\n        e.EmailId,\n        e.EmailRecurrenceId,\n        e.MemberId,\n        SUM(CASE WHEN e.ActionTypeId = 7 THEN 1 ELSE 0 END) AS OpenCount,\n        SUM(CASE WHEN e.ActionTypeId = 4 THEN 1 ELSE 0 END) AS DeliverCount,\n        SUM(CASE WHEN e.ActionTypeId = 8 THEN 1 ELSE 0 END) AS ClickCount,\n        SUM(CASE WHEN e.ActionTypeId = 6 THEN 1 ELSE 0 END) AS BounceCount,\n        SUM(CASE WHEN e.ActionTypeId = 10 THEN 1 ELSE 0 END) AS UnsubscribeCount,\n        SUM(CASE WHEN e.ActionTypeId = -1 AND e.EventAction = 'conversion' THEN 1 ELSE 0 END) AS ConversionCount,\n\t\tGETDATE() as DateCreated,\n\t\tGETDATE() AS DateUpdated\nFROM    dbo.event e\n\t\t\tJOIN\n        dbo.DimDate dd\n\t\t\tON e.DateKey = dd.DateKey\nWHERE   $partition.pf_event(SiteId) = $partition.pf_event(@{pipeline().parameters.SiteId})\n\t\tAND dd.Year = @{item().Year}\n\t\tAND dd.Month = @{item().Month}\n\t\t--AND e.EventId > @{activity('GetMaxEventId').output.FirstRow.MaxEventId}\nGROUP   BY e.SiteId,\n\t\te.SubCommunityId,\n        e.DateKey,\n        e.EmailId,\n        e.EmailRecurrenceId,\n        e.MemberId\nORDER   BY e.SiteId,\n\t\te.SubCommunityId,\n        e.DateKey,\n        e.EmailId,\n        e.EmailRecurrenceId,\n        e.MemberId",
										"type": "Expression"
									},
									"partitionOption": "None"
								},
								"sink": {
									"type": "SqlMISink",
									"sqlWriterStoredProcedureName": "[dbo].[usp_BulkUpload_FactEmailAction]",
									"sqlWriterTableType": "dbo.emails",
									"storedProcedureTableTypeParameterName": "emails"
								},
								"enableStaging": false,
								"enableSkipIncompatibleRow": true,
								"redirectIncompatibleRowSettings": {
									"linkedServiceName": {
										"referenceName": "linkedService1",
										"type": "LinkedServiceReference"
									},
									"path": "garytestir"
								},
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"name": "SiteId",
												"type": "Int32"
											},
											"sink": {
												"name": "SiteID",
												"type": "Int32"
											}
										},
										{
											"source": {
												"name": "SubCommunityId",
												"type": "Int32"
											},
											"sink": {
												"name": "SubCommunityId",
												"type": "Int32"
											}
										},
										{
											"source": {
												"name": "DateKey",
												"type": "Int32"
											},
											"sink": {
												"name": "DateKey",
												"type": "Int32"
											}
										},
										{
											"source": {
												"name": "EmailId",
												"type": "Int32"
											},
											"sink": {
												"name": "EmailId",
												"type": "Int32"
											}
										},
										{
											"source": {
												"name": "EmailRecurrenceId",
												"type": "Int32"
											},
											"sink": {
												"name": "EmailRecurrenceId",
												"type": "Int32"
											}
										},
										{
											"source": {
												"name": "MemberId",
												"type": "Int32"
											},
											"sink": {
												"name": "MemberId",
												"type": "Int32"
											}
										},
										{
											"source": {
												"name": "OpenCount",
												"type": "Int32"
											},
											"sink": {
												"name": "OpenCount",
												"type": "Int32"
											}
										},
										{
											"source": {
												"name": "DeliverCount",
												"type": "Int32"
											},
											"sink": {
												"name": "DeliverCount",
												"type": "Int32"
											}
										},
										{
											"source": {
												"name": "ClickCount",
												"type": "Int32"
											},
											"sink": {
												"name": "ClickCount",
												"type": "Int32"
											}
										},
										{
											"source": {
												"name": "BounceCount",
												"type": "Int32"
											},
											"sink": {
												"name": "BounceCount",
												"type": "Int32"
											}
										},
										{
											"source": {
												"name": "UnsubscribeCount",
												"type": "Int32"
											},
											"sink": {
												"name": "UnsubscribeCount",
												"type": "Int32"
											}
										},
										{
											"source": {
												"name": "ConversionCount",
												"type": "Int32"
											},
											"sink": {
												"name": "ConversionCount",
												"type": "Int32"
											}
										},
										{
											"source": {
												"name": "DateCreated",
												"type": "DateTime"
											},
											"sink": {
												"name": "DateCreated",
												"type": "DateTime"
											}
										},
										{
											"source": {
												"name": "DateUpdated",
												"type": "DateTime"
											},
											"sink": {
												"name": "DateUpdated",
												"type": "DateTime"
											}
										}
									]
								}
							},
							"inputs": [
								{
									"referenceName": "DS_iModulesStaging",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DS_Prod_FactEmailAction",
									"type": "DatasetReference"
								}
							]
						}
					]
				}
			},
			{
				"name": "UpdateMaxEventId",
				"description": "Update EventId in StageEmailMaxId for SiteId",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LoopThroughMonths",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlMISource",
						"sqlReaderQuery": {
							"value": "SELECT\t@{pipeline().parameters.SiteId} AS SiteId,\n\t\tISNULL(MAX(EventId),0) AS NewMaxEventId\nFROM\tEvent\nWHERE\t$partition.pf_event(SiteId) = $partition.pf_event(@{pipeline().parameters.SiteId})",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"sink": {
						"type": "SqlMISink",
						"preCopyScript": {
							"value": "DELETE\t\nFROM\tStageEmailMaxId\nWHERE\tSiteId = @{pipeline().parameters.SiteId}",
							"type": "Expression"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "SiteId",
									"type": "Int32"
								},
								"sink": {
									"name": "SiteId",
									"type": "Int32"
								}
							},
							{
								"source": {
									"name": "NewMaxEventId",
									"type": "Int64"
								},
								"sink": {
									"name": "EventId",
									"type": "Int64"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "DS_iModulesStaging",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DS_Prod_StageEmailMaxId",
						"type": "DatasetReference"
					}
				]
			}
		],
		"parameters": {
			"SiteId": {
				"type": "int",
				"defaultValue": 100
			}
		},
		"annotations": [],
		"lastPublishTime": "2020-05-16T23:31:44Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}